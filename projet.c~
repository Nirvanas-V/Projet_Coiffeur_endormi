#include <stdio.h>
#include <stdlib.h>
#include <errno.h>
#include <sys/wait.h>
#include <unistd.h>
#include <pthread.h>

//gcc projet.c -o compil -Wall -lpthread
// ./compil


int generer_nb_aleatoire(int nbMax)
{
  int nb;
  srandom(time(NULL));
  nb = rand() % (nbMax-1) + 1;
  
  return nb;
}


void proc_coiffeur()
{
  printf("Appel du coiffeur \n \n");
  pthread_exit(NULL);
}

void proc_client(void *args)
{
  int i = *(int*)args;
  printf("Appel du client \n ");
  printf("Le client a le numero : %d \n \n", i);
  pthread_exit(NULL);
}



int main (void)
{
  //INITIALISATION

  //Création du tableau de chaises
  const int nb_chaises = 5;
  pid_t tableau_chaises[nb_chaises];

  //Nombre de clients dans la rue
  int nombre_clients = generer_nb_aleatoire(10);
  printf("Il y a : %d clients dans la rue \n", nombre_clients);
  
  //Creation du tableau pour identifier les clients
  int tableau_id_clients [nombre_clients];

  //CREATION DES THREADS
  
  //Création du coiffeur
  pthread_attr_t coiffeur;
  pthread_t coiffeur_id;
  pthread_attr_init(&coiffeur);
  pthread_create(&coiffeur_id, &coiffeur, (void*)proc_coiffeur, (void*)NULL);

  pthread_join(coiffeur_id, NULL);
  

  //Création des clients
  for (int i = 1; i <= nombre_clients; i++)
    {
      //Création de l'identifiant du client
      tableau_id_clients[i] = i;

	//Création du client
      pthread_attr_t client;
      pthread_attr_init(&client);
      pthread_t client_id[i];
      pthread_create(&client_id[i], &client, (void*)proc_client, &tableau_id_clients[i]);

      pthread_join(client_id[i], NULL);

      sleep(1);
    }


  return 0;
}
